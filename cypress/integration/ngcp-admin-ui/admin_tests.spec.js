/// <reference types="cypress" />

const ngcpConfigAdmin = Cypress.config('ngcpConfigAdmin')
const adminName = 'admin' + Math.floor((Math.random() * 100000) + 1)
const adminPass = 'rand0mpassword1234'
const adminName2 = 'admin' + Math.floor((Math.random() * 100000) + 1)
const adminPass2 = 'rand0mpassword12345'
const reseller = 'reseller' + Math.floor((Math.random() * 100000) + 1)
const contract = 'contract' + Math.floor((Math.random() * 100000) + 1)

context('Administrator tests', () => {
    context('UI administrator tests', () => {
        before(() => {
            Cypress.log({ displayName: 'API URL', message: ngcpConfigAdmin.apiHost })
        })

        beforeEach(() => {
            cy.visit(ngcpConfigAdmin.apiHost)
            // adding wait here, otherwise inputs will be dropped
            cy.wait(500)
        })

        it('Create a reseller', () => {
            cy.loginUI(ngcpConfigAdmin.username, ngcpConfigAdmin.password)
            cy.contains('Settings').click()
            cy.get('a[href="#/reseller"]').click()
            cy.get('.q-linear-progress').should('be.visible')
            cy.get('.q-linear-progress').should('not.exist')
            cy.get('div[label="Add"]').click()
            cy.contains('Create').click()
            cy.get('a[href="#/contract/reseller/create"]').click()
            cy.get('label[label="Active Billing Profile"]').type('default')
            cy.contains('Default Billing Profile').click()
            cy.get('label[label="Contact"]').type('default')
            cy.contains('default-system').click()
            cy.contains('Status').click()
            cy.contains('Pending').click()
            cy.get('input[aria-label="External #"]').type(contract)
            cy.contains('Save').click()
            cy.get('div[role="alert"]').should('be.visible')
            cy.contains('Contract created successfully').should('be.visible')
            cy.get('input[type="search"]').type(contract)
            cy.contains('default-system').click()
            cy.get('input[aria-label="Name"]').type(reseller)
            cy.contains('Save').click()
            cy.get('div[role="alert"]').should('be.visible')
            cy.contains('Reseller created successfully').should('be.visible')
        })

        it('Create an administrator and enable superuser for this administrator', () => {
            cy.loginUI(ngcpConfigAdmin.username, ngcpConfigAdmin.password)
            cy.contains('Settings').click()
            cy.get('a[href="#/administrator"]').click()
            cy.get('.q-linear-progress').should('be.visible')
            cy.get('.q-linear-progress').should('not.exist')
            cy.get('div[label="Add"]').click()
            cy.get('input[type="search"]').click()
            cy.contains('default').click()
            cy.get('input[aria-label="Login"]').type(adminName)
            cy.get('input[aria-label="Password"]').type(adminPass)
            cy.get('input[aria-label="Password Retype"]').type(adminPass)
            cy.contains('Superuser').click()
            cy.contains('Save').click()
            cy.get('div[role="alert"]').should('be.visible')
            cy.contains('Administrator created successfully').should('be.visible')
        })

        it('Create a second administrator with a different reseller', () => {
            cy.loginUI(ngcpConfigAdmin.username, ngcpConfigAdmin.password)
            cy.contains('Settings').click()
            cy.get('a[href="#/administrator"]').click()
            cy.get('.q-linear-progress').should('be.visible')
            cy.get('.q-linear-progress').should('not.exist')
            cy.get('div[label="Add"]').click()
            cy.get('input[type="search"]').type(reseller)
            cy.contains(reseller).click()
            cy.get('input[aria-label="Login"]').type(adminName2)
            cy.get('input[aria-label="Password"]').type(adminPass2)
            cy.get('input[aria-label="Password Retype"]').type(adminPass2)
            cy.contains('Save').click()
            cy.get('div[role="alert"]').should('be.visible')
            cy.contains('Administrator created successfully').should('be.visible')
        })

        it('Log in and make sure that superuser admin can change permissions from admins with different resellers', () => {
            cy.loginUI(adminName, adminPass)
            cy.contains('Settings').click()
            cy.get('a[href="#/administrator"]').click()
            cy.get('.q-linear-progress').should('be.visible')
            cy.get('.q-linear-progress').should('not.exist')
            cy.get('input[aria-label="Search"]').type(adminName2)
            cy.get('.q-linear-progress').should('be.visible')
            cy.get('.q-linear-progress').should('not.exist')
            cy.get('td[class="q-table--col-auto-width"]').click()
            cy.get('div[aria-disabled="true"]').should('not.exist')
        })

        it('Set administrator to master', () => {
            cy.loginUI(ngcpConfigAdmin.username, ngcpConfigAdmin.password)
            cy.contains('Settings').click()
            cy.get('a[href="#/administrator"]').click()
            cy.get('.q-linear-progress').should('be.visible')
            cy.get('.q-linear-progress').should('not.exist')
            cy.get('input[aria-label="Search"]').type(adminName)
            cy.get('.q-linear-progress').should('be.visible')
            cy.get('.q-linear-progress').should('not.exist')
            cy.get('td[class="q-table--col-auto-width"]').click()
            cy.get('div[label="Edit"]').click()
            cy.get('.q-linear-progress').should('be.visible')
            cy.get('.q-linear-progress').should('not.exist')
            cy.contains('Superuser').click()
            cy.contains('Master').click()
            cy.contains('Save').click()
            cy.get('div[role="alert"]').should('be.visible')
            cy.contains('Administrator saved successfully').should('be.visible')
        })

        it('Log in and make sure that master admin cannot change permissions from admins with different resellers', () => {
            cy.loginUI(adminName, adminPass)
            cy.contains('Settings').click()
            cy.get('a[href="#/administrator"]').click()
            cy.get('.q-linear-progress').should('be.visible')
            cy.get('.q-linear-progress').should('not.exist')
            cy.get('input[aria-label="Search"]').type(adminName2)
            cy.get('.q-linear-progress').should('be.visible')
            cy.get('.q-linear-progress').should('not.exist')
            cy.contains('No matching records found').should('be.visible')
        })

        it('Deactivate created administrator', () => {
            cy.loginUI(ngcpConfigAdmin.username, ngcpConfigAdmin.password)
            cy.contains('Settings').click()
            cy.get('a[href="#/administrator"]').click()
            cy.get('.q-linear-progress').should('be.visible')
            cy.get('.q-linear-progress').should('not.exist')
            cy.get('input[aria-label="Search"]').type(adminName)
            cy.get('.q-linear-progress').should('be.visible')
            cy.get('.q-linear-progress').should('not.exist')
            cy.get('td[class="q-table--col-auto-width"]').click()
            cy.get('div[label="Edit"]').click()
            cy.get('.q-linear-progress').should('be.visible')
            cy.get('.q-linear-progress').should('not.exist')
            cy.contains('Master').click()
            cy.contains('Active').click()
            cy.contains('Save').click()
            cy.get('div[role="alert"]').should('be.visible')
            cy.contains('Administrator saved successfully').should('be.visible')
        })

        it('Login with deactivated administrator', () => {
            cy.intercept('POST', '**/login_jwt').as('loginRequest')
            cy.get('input:first').type(adminName)
            cy.get('input:last').type(adminPass)
            cy.contains('arrow_forward').click()

            cy.wait('@loginRequest').then(({ response }) => {
                expect(response.statusCode).to.equal(403)
                cy.get('div[role="alert"]').should('be.visible')
            })
        })

        it('Enable customer care for administrator', () => {
            cy.loginUI(ngcpConfigAdmin.username, ngcpConfigAdmin.password)
            cy.contains('Settings').click()
            cy.get('a[href="#/administrator"]').click()
            cy.get('.q-linear-progress').should('be.visible')
            cy.get('.q-linear-progress').should('not.exist')
            cy.get('input[aria-label="Search"]').type(adminName)
            cy.get('.q-linear-progress').should('be.visible')
            cy.get('.q-linear-progress').should('not.exist')
            cy.get('td[class="q-table--col-auto-width"]').click()
            cy.get('div[label="Edit"]').click()
            cy.get('.q-linear-progress').should('be.visible')
            cy.get('.q-linear-progress').should('not.exist')
            cy.contains('Active').click()
            cy.contains('Customer Care').click()
            cy.contains('Save').click()
            cy.get('div[role="alert"]').should('be.visible')
            cy.contains('Administrator saved successfully').should('be.visible')
        })

        it('Check if customer care has been activated', () => {
            cy.loginUI(adminName, adminPass)
            cy.contains('Settings').click()
            cy.get('a[href="#/customer"]').should('be.visible')
            cy.get('a[href="#/subscriber"]').should('be.visible')
        })

        it('Enable read-only for administrator', () => {
            cy.loginUI(ngcpConfigAdmin.username, ngcpConfigAdmin.password)
            cy.contains('Settings').click()
            cy.get('a[href="#/administrator"]').click()
            cy.get('.q-linear-progress').should('be.visible')
            cy.get('.q-linear-progress').should('not.exist')
            cy.get('input[aria-label="Search"]').type(adminName)
            cy.get('.q-linear-progress').should('be.visible')
            cy.get('.q-linear-progress').should('not.exist')
            cy.get('td[class="q-table--col-auto-width"]').click()
            cy.get('div[label="Edit"]').click()
            cy.get('.q-linear-progress').should('be.visible')
            cy.get('.q-linear-progress').should('not.exist')
            cy.contains('Customer Care').click()
            cy.contains('Read Only').click()
            cy.contains('Save').click()
            cy.get('div[role="alert"]').should('be.visible')
            cy.contains('Administrator saved successfully').should('be.visible')
        })

        it('Check if read-only has been activated', () => {
            cy.loginUI(adminName, adminPass)
            cy.contains('Settings').click()
            cy.get('a[href="#/administrator"]').click()
            cy.get('div[label="Add"]').should('not.exist')
            cy.get('div[label="Edit"]').should('not.exist')
            cy.get('div[label="Delete"]').should('not.exist')
            cy.get('a[href="#/customer"]').should('be.visible')
            cy.get('div[label="Add"]').should('not.exist')
            cy.get('div[label="Edit"]').should('not.exist')
            cy.get('div[label="Delete"]').should('not.exist')
            cy.get('a[href="#/contact"]').should('be.visible')
            cy.get('div[label="Add"]').should('not.exist')
            cy.get('div[label="Edit"]').should('not.exist')
            cy.get('div[label="Terminate"]').should('not.exist')
            cy.get('a[href="#/domain"]').should('be.visible')
            cy.get('div[label="Add"]').should('not.exist')
            cy.get('div[label="Edit"]').should('not.exist')
            cy.get('div[label="Delete"]').should('not.exist')
        })

        it('Delete both administrators and check if they are deleted', () => {
            cy.loginUI(ngcpConfigAdmin.username, ngcpConfigAdmin.password)
            cy.contains('Settings').click()
            cy.get('a[href="#/administrator"]').click()
            cy.get('.q-linear-progress').should('be.visible')
            cy.get('.q-linear-progress').should('not.exist')
            cy.get('input[aria-label="Search"]').type(adminName)
            cy.get('.q-linear-progress').should('be.visible')
            cy.get('.q-linear-progress').should('not.exist')
            cy.get('td[class="q-table--col-auto-width"]').click()
            cy.get('div[label="Delete"]').click()
            cy.get('.q-btn:last').click()
            cy.contains('No matching records found').should('be.visible')
            cy.get('input[aria-label="Search"]').clear().type(adminName2)
            cy.get('.q-linear-progress').should('be.visible')
            cy.get('.q-linear-progress').should('not.exist')
            cy.get('td[class="q-table--col-auto-width"]').click()
            cy.get('div[label="Delete"]').click()
            cy.get('.q-btn:last').click()
            cy.contains('No matching records found').should('be.visible')
        })

        it('Delete reseller and check if they are deleted', () => {
            cy.loginUI(ngcpConfigAdmin.username, ngcpConfigAdmin.password)
            cy.contains('Settings').click()
            cy.get('a[href="#/reseller"]').click()
            cy.get('.q-linear-progress').should('be.visible')
            cy.get('.q-linear-progress').should('not.exist')
            cy.get('input[aria-label="Search"]').type(reseller)
            cy.get('.q-linear-progress').should('be.visible')
            cy.get('.q-linear-progress').should('not.exist')
            cy.get('td[class="q-table--col-auto-width"]').click()
            cy.get('div[label="Terminate"]').click()
            cy.get('.q-btn:last').click()
            cy.contains('No matching records found').should('be.visible')
        })
    })
})
